{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semester4\\\\AI\\\\TUGAS Opsional\\\\frontend\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles/AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialQuestion = {\n  id: null,\n  text: '',\n  type: 'single_choice',\n  // 'single_choice', 'multiple_choice', 'essay'\n  choices: ['', '', '', ''],\n  correctAnswers: [],\n  score: 1\n};\nfunction AdminPanel() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [editingQuestion, setEditingQuestion] = useState({\n    ...initialQuestion\n  }); // Initialize as a copy\n  const [isEditing, setIsEditing] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [message, setMessage] = useState(null); // Add message state\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  const fetchQuestions = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:5000/api/questions');\n      setQuestions(res.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n      setMessage({\n        text: 'Failed to load questions.',\n        type: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const validate = () => {\n    const newErrors = {};\n    if (!editingQuestion.text.trim()) {\n      newErrors.text = 'Question text is required';\n    }\n    if (editingQuestion.type === 'single' || editingQuestion.type === 'multiple') {\n      editingQuestion.choices.forEach((choice, index) => {\n        if (!choice.trim()) {\n          newErrors[`choice_${index}`] = 'Choice cannot be empty';\n        }\n      });\n      if (editingQuestion.correctAnswers.length === 0) {\n        newErrors.correctAnswers = 'At least one correct answer must be selected';\n      }\n    }\n    if (!editingQuestion.score || editingQuestion.score < 1) {\n      newErrors.score = 'Score must be at least 1';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingQuestion({\n      ...editingQuestion,\n      [name]: value\n    });\n  };\n  const handleChoiceChange = (index, value) => {\n    const newChoices = [...editingQuestion.choices];\n    newChoices[index] = value;\n    setEditingQuestion({\n      ...editingQuestion,\n      choices: newChoices\n    });\n  };\n  const handleCorrectAnswerChange = index => {\n    let newCorrectAnswers = [...editingQuestion.correctAnswers];\n    if (editingQuestion.type === 'single') {\n      newCorrectAnswers = [index];\n    } else {\n      if (newCorrectAnswers.includes(index)) {\n        newCorrectAnswers = newCorrectAnswers.filter(i => i !== index);\n      } else {\n        newCorrectAnswers.push(index);\n      }\n    }\n    setEditingQuestion({\n      ...editingQuestion,\n      correctAnswers: newCorrectAnswers\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    try {\n      const payload = {\n        text: editingQuestion.text,\n        type: editingQuestion.type,\n        choices: editingQuestion.choices,\n        correctAnswers: editingQuestion.correctAnswers,\n        score: Number(editingQuestion.score)\n      };\n      setLoading(true); // Start loading\n\n      if (isEditing) {\n        await axios.put(`http://localhost:5000/api/questions/${editingQuestion.id}`, payload);\n        setMessage({\n          text: 'Question updated successfully!',\n          type: 'success'\n        });\n      } else {\n        const response = await axios.post('http://localhost:5000/api/questions', payload);\n        payload.id = response.data.id; // Extract the ID from the response\n        setQuestions(prevQuestions => [...prevQuestions, payload]);\n        setMessage({\n          text: 'Question added successfully!',\n          type: 'success'\n        });\n      }\n      setEditingQuestion({\n        ...initialQuestion\n      }); // Reset form\n      setIsEditing(false);\n      setErrors({});\n      fetchQuestions(); // Refresh questions list\n    } catch (error) {\n      console.error('Error saving question:', error);\n      setMessage({\n        text: 'Failed to save question.',\n        type: 'error'\n      });\n    } finally {\n      setLoading(false); // End loading\n    }\n  };\n  const handleEdit = question => {\n    setEditingQuestion({\n      ...question\n    }); // Copy question data\n    setIsEditing(true);\n    setErrors({});\n    setMessage(null);\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this question?')) return;\n    try {\n      setLoading(true);\n      await axios.delete(`http://localhost:5000/api/questions/${id}`);\n      setQuestions(prevQuestions => prevQuestions.filter(q => q.id !== id));\n      setMessage({\n        text: 'Question deleted successfully!',\n        type: 'success'\n      });\n    } catch (error) {\n      console.error('Error deleting question:', error);\n      setMessage({\n        text: 'Failed to delete question.',\n        type: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingQuestion({\n      ...initialQuestion\n    });\n    setIsEditing(false);\n    setErrors({});\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Panel - Manage Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"text\",\n          value: editingQuestion.text,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), errors.text && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          value: editingQuestion.type,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"single_choice\",\n            children: \"Single Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"multiple_choice\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"essay\",\n            children: \"Essay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), (editingQuestion.type === 'single_choice' || editingQuestion.type === 'multiple_choice') && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), editingQuestion.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choice-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: choice,\n            onChange: e => handleChoiceChange(index, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: editingQuestion.type === 'single_choice' ? 'radio' : 'checkbox',\n              checked: editingQuestion.correctAnswers.includes(index),\n              onChange: () => handleCorrectAnswerChange(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), \"Correct\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this), errors[`choice_${index}`] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors[`choice_${index}`]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 63\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this)), errors.correctAnswers && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.correctAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), editingQuestion.type === 'essay' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Essay questions do not have choices or correct answers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"score\",\n          value: editingQuestion.score,\n          onChange: handleInputChange,\n          min: \"1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), errors.score && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: [loading ? 'Saving...' : isEditing ? 'Update' : 'Add', \" Question\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancelEdit,\n        disabled: loading,\n        children: loading ? 'Cancelling...' : 'Cancel'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"question-list\",\n      children: questions.map(q => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: q.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 29\n        }, this), \" (Type: \", q.type, \", Score: \", q.score, \")\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(q),\n            disabled: loading,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(q.id),\n            disabled: loading,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"9Tnj+dacZN/5sUtZ1FTIB2UdZfc=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","initialQuestion","id","text","type","choices","correctAnswers","score","AdminPanel","_s","questions","setQuestions","editingQuestion","setEditingQuestion","isEditing","setIsEditing","errors","setErrors","loading","setLoading","message","setMessage","fetchQuestions","res","get","data","error","console","validate","newErrors","trim","forEach","choice","index","length","Object","keys","handleInputChange","e","name","value","target","handleChoiceChange","newChoices","handleCorrectAnswerChange","newCorrectAnswers","includes","filter","i","push","handleSubmit","preventDefault","payload","Number","put","response","post","prevQuestions","handleEdit","question","handleDelete","window","confirm","delete","q","handleCancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","onChange","required","map","checked","min","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/Semester4/AI/TUGAS Opsional/frontend/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './styles/AdminPanel.css';\r\n\r\nconst initialQuestion = {\r\n    id: null,\r\n    text: '',\r\n    type: 'single_choice', // 'single_choice', 'multiple_choice', 'essay'\r\n    choices: ['', '', '', ''],\r\n    correctAnswers: [],\r\n    score: 1,\r\n};\r\n\r\nfunction AdminPanel() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [editingQuestion, setEditingQuestion] = useState({ ...initialQuestion }); // Initialize as a copy\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(true); // Add loading state\r\n    const [message, setMessage] = useState(null); // Add message state\r\n\r\n    useEffect(() => {\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const fetchQuestions = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/questions');\r\n            setQuestions(res.data);\r\n        } catch (error) {\r\n            console.error('Error fetching questions:', error);\r\n            setMessage({ text: 'Failed to load questions.', type: 'error' });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const newErrors = {};\r\n        if (!editingQuestion.text.trim()) {\r\n            newErrors.text = 'Question text is required';\r\n        }\r\n        if (editingQuestion.type === 'single' || editingQuestion.type === 'multiple') {\r\n            editingQuestion.choices.forEach((choice, index) => {\r\n                if (!choice.trim()) {\r\n                    newErrors[`choice_${index}`] = 'Choice cannot be empty';\r\n                }\r\n            });\r\n            if (editingQuestion.correctAnswers.length === 0) {\r\n                newErrors.correctAnswers = 'At least one correct answer must be selected';\r\n            }\r\n        }\r\n        if (!editingQuestion.score || editingQuestion.score < 1) {\r\n            newErrors.score = 'Score must be at least 1';\r\n        }\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEditingQuestion({ ...editingQuestion, [name]: value });\r\n    };\r\n\r\n    const handleChoiceChange = (index, value) => {\r\n        const newChoices = [...editingQuestion.choices];\r\n        newChoices[index] = value;\r\n        setEditingQuestion({ ...editingQuestion, choices: newChoices });\r\n    };\r\n\r\n    const handleCorrectAnswerChange = (index) => {\r\n        let newCorrectAnswers = [...editingQuestion.correctAnswers];\r\n        if (editingQuestion.type === 'single') {\r\n            newCorrectAnswers = [index];\r\n        } else {\r\n            if (newCorrectAnswers.includes(index)) {\r\n                newCorrectAnswers = newCorrectAnswers.filter(i => i !== index);\r\n            } else {\r\n                newCorrectAnswers.push(index);\r\n            }\r\n        }\r\n        setEditingQuestion({ ...editingQuestion, correctAnswers: newCorrectAnswers });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validate()) return;\r\n\r\n        try {\r\n            const payload = {\r\n                text: editingQuestion.text,\r\n                type: editingQuestion.type,\r\n                choices: editingQuestion.choices,\r\n                correctAnswers: editingQuestion.correctAnswers,\r\n                score: Number(editingQuestion.score),\r\n            };\r\n\r\n            setLoading(true); // Start loading\r\n\r\n            if (isEditing) {\r\n                await axios.put(`http://localhost:5000/api/questions/${editingQuestion.id}`, payload);\r\n                setMessage({ text: 'Question updated successfully!', type: 'success' });\r\n            } else {\r\n                const response = await axios.post('http://localhost:5000/api/questions', payload);\r\n                payload.id = response.data.id; // Extract the ID from the response\r\n                setQuestions(prevQuestions => [...prevQuestions, payload]);\r\n                setMessage({ text: 'Question added successfully!', type: 'success' });\r\n            }\r\n\r\n            setEditingQuestion({ ...initialQuestion }); // Reset form\r\n            setIsEditing(false);\r\n            setErrors({});\r\n            fetchQuestions(); // Refresh questions list\r\n        } catch (error) {\r\n            console.error('Error saving question:', error);\r\n            setMessage({ text: 'Failed to save question.', type: 'error' });\r\n\r\n        } finally {\r\n            setLoading(false); // End loading\r\n        }\r\n    };\r\n\r\n\r\n    const handleEdit = (question) => {\r\n        setEditingQuestion({ ...question }); // Copy question data\r\n        setIsEditing(true);\r\n        setErrors({});\r\n        setMessage(null);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (!window.confirm('Are you sure you want to delete this question?')) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            await axios.delete(`http://localhost:5000/api/questions/${id}`);\r\n            setQuestions(prevQuestions => prevQuestions.filter(q => q.id !== id));\r\n            setMessage({ text: 'Question deleted successfully!', type: 'success' });\r\n        } catch (error) {\r\n            console.error('Error deleting question:', error);\r\n            setMessage({ text: 'Failed to delete question.', type: 'error' });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditingQuestion({ ...initialQuestion });\r\n        setIsEditing(false);\r\n        setErrors({});\r\n        setMessage(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Admin Panel - Manage Questions</h1>\r\n\r\n            {message && (\r\n                <div className={`message ${message.type}`}>\r\n                    {message.text}\r\n                </div>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                {/* Form fields */}\r\n                <div>\r\n                    <label>Question Text:</label>\r\n                    <textarea\r\n                        name=\"text\"\r\n                        value={editingQuestion.text}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                    {errors.text && <p className=\"error\">{errors.text}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Type:</label>\r\n                    <select\r\n                        name=\"type\"\r\n                        value={editingQuestion.type}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"single_choice\">Single Choice</option>\r\n                        <option value=\"multiple_choice\">Multiple Choice</option>\r\n                        <option value=\"essay\">Essay</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {(editingQuestion.type === 'single_choice' || editingQuestion.type === 'multiple_choice') && (\r\n                    <div>\r\n                        <label>Choices:</label>\r\n                        {editingQuestion.choices.map((choice, index) => (\r\n                            <div key={index} className=\"choice-input-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={choice}\r\n                                    onChange={(e) => handleChoiceChange(index, e.target.value)}\r\n                                    required\r\n                                />\r\n                                <label>\r\n                                    <input\r\n                                        type={editingQuestion.type === 'single_choice' ? 'radio' : 'checkbox'}\r\n                                        checked={editingQuestion.correctAnswers.includes(index)}\r\n                                        onChange={() => handleCorrectAnswerChange(index)}\r\n                                    />\r\n                                    Correct\r\n                                </label>\r\n                                {errors[`choice_${index}`] && <p className=\"error\">{errors[`choice_${index}`]}</p>}\r\n                            </div>\r\n                        ))}\r\n                        {errors.correctAnswers && <p className=\"error\">{errors.correctAnswers}</p>}\r\n                    </div>\r\n                )}\r\n\r\n                {editingQuestion.type === 'essay' && (\r\n                    <p>Essay questions do not have choices or correct answers.</p>\r\n                )}\r\n\r\n                <div>\r\n                    <label>Score:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"score\"\r\n                        value={editingQuestion.score}\r\n                        onChange={handleInputChange}\r\n                        min=\"1\"\r\n                        required\r\n                    />\r\n                    {errors.score && <p className=\"error\">{errors.score}</p>}\r\n                </div>\r\n\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Saving...' : (isEditing ? 'Update' : 'Add')} Question\r\n                </button>\r\n\r\n                {isEditing && (\r\n                    <button type=\"button\" onClick={handleCancelEdit} disabled={loading}>\r\n                        {loading ? 'Cancelling...' : 'Cancel'}\r\n                    </button>\r\n                )}\r\n            </form>\r\n\r\n            <h2>Questions List</h2>\r\n            {loading ? (\r\n                <div>Loading questions...</div>\r\n            ) : (\r\n                <ul className=\"question-list\">\r\n                    {questions.map(q => (\r\n                        <li key={q.id}>\r\n                            <strong>{q.text}</strong> (Type: {q.type}, Score: {q.score})\r\n                            <div className=\"question-actions\">\r\n                                <button onClick={() => handleEdit(q)} disabled={loading}>Edit</button>\r\n                                <button onClick={() => handleDelete(q.id)} disabled={loading}>Delete</button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}