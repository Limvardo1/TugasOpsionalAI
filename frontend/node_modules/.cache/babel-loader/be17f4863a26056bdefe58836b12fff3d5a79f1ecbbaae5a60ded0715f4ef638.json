{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semester4\\\\AI\\\\TUGAS Opsional\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds per question\n  const [score, setScore] = useState(0);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0 && !quizFinished) {\n      startTimer();\n    }\n    return () => clearInterval(timerRef.current);\n  }, [currentIndex, questions, quizFinished]);\n  const fetchQuestions = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/questions/random?limit=10');\n      setQuestions(res.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const startTimer = () => {\n    setTimeLeft(30);\n    clearInterval(timerRef.current);\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          handleNext();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleAnswerChange = choiceIndex => {\n    setAnswers({\n      ...answers,\n      [currentIndex]: choiceIndex\n    });\n  };\n  const handleSubmitAnswer = () => {\n    const currentQuestion = questions[currentIndex];\n    const userAnswer = answers[currentIndex];\n    let questionScore = 0;\n    if (currentQuestion.type === 'single') {\n      if (currentQuestion.correctAnswers.includes(userAnswer)) {\n        questionScore = currentQuestion.score * (timeLeft / 30);\n      }\n    } else if (currentQuestion.type === 'multiple') {\n      const correctSet = new Set(currentQuestion.correctAnswers);\n      const userSet = new Set(Array.isArray(userAnswer) ? userAnswer : [userAnswer]);\n      if (userSet.size === correctSet.size && [...userSet].every(ans => correctSet.has(ans))) {\n        questionScore = currentQuestion.score * (timeLeft / 30);\n      }\n    } else if (currentQuestion.type === 'essay') {\n      // For essay, scoring can be manual or default 0 here\n      questionScore = 0;\n    }\n    setScore(prev => prev + questionScore);\n  };\n  const handleNext = () => {\n    handleSubmitAnswer();\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setQuizFinished(true);\n    }\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  if (quizFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", timeLeft, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), currentQuestion.type === 'essay' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      onChange: e => setAnswers({\n        ...answers,\n        [currentIndex]: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion.choices.map((choice, index) => {\n        var _answers$currentIndex;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: currentQuestion.type === 'single' ? 'radio' : 'checkbox',\n            name: \"answer\",\n            value: index,\n            checked: currentQuestion.type === 'single' ? answers[currentIndex] === index : (_answers$currentIndex = answers[currentIndex]) === null || _answers$currentIndex === void 0 ? void 0 : _answers$currentIndex.includes(index),\n            onChange: () => handleAnswerChange(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), choice]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"nve4xyXtKfdWRqXxLPpnXuDX0Ds=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentIndex","setCurrentIndex","answers","setAnswers","timeLeft","setTimeLeft","score","setScore","quizFinished","setQuizFinished","timerRef","fetchQuestions","length","startTimer","clearInterval","current","res","get","data","error","console","setInterval","prev","handleNext","handleAnswerChange","choiceIndex","handleSubmitAnswer","currentQuestion","userAnswer","questionScore","type","correctAnswers","includes","correctSet","Set","userSet","Array","isArray","size","every","ans","has","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","text","rows","cols","onChange","e","target","value","choices","map","choice","index","_answers$currentIndex","name","checked","onClick","_c","$RefreshReg$"],"sources":["D:/Semester4/AI/TUGAS Opsional/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds per question\r\n  const [score, setScore] = useState(0);\r\n  const [quizFinished, setQuizFinished] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (questions.length > 0 && !quizFinished) {\r\n      startTimer();\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [currentIndex, questions, quizFinished]);\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/questions/random?limit=10');\r\n      setQuestions(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n    }\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setTimeLeft(30);\r\n    clearInterval(timerRef.current);\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          handleNext();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleAnswerChange = (choiceIndex) => {\r\n    setAnswers({ ...answers, [currentIndex]: choiceIndex });\r\n  };\r\n\r\n  const handleSubmitAnswer = () => {\r\n    const currentQuestion = questions[currentIndex];\r\n    const userAnswer = answers[currentIndex];\r\n    let questionScore = 0;\r\n\r\n    if (currentQuestion.type === 'single') {\r\n      if (currentQuestion.correctAnswers.includes(userAnswer)) {\r\n        questionScore = currentQuestion.score * (timeLeft / 30);\r\n      }\r\n    } else if (currentQuestion.type === 'multiple') {\r\n      const correctSet = new Set(currentQuestion.correctAnswers);\r\n      const userSet = new Set(Array.isArray(userAnswer) ? userAnswer : [userAnswer]);\r\n      if (userSet.size === correctSet.size && [...userSet].every((ans) => correctSet.has(ans))) {\r\n        questionScore = currentQuestion.score * (timeLeft / 30);\r\n      }\r\n    } else if (currentQuestion.type === 'essay') {\r\n      // For essay, scoring can be manual or default 0 here\r\n      questionScore = 0;\r\n    }\r\n\r\n    setScore((prev) => prev + questionScore);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    handleSubmitAnswer();\r\n    if (currentIndex + 1 < questions.length) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    } else {\r\n      setQuizFinished(true);\r\n    }\r\n  };\r\n\r\n  if (questions.length === 0) {\r\n    return <div>Loading questions...</div>;\r\n  }\r\n\r\n  if (quizFinished) {\r\n    return (\r\n      <div>\r\n        <h2>Quiz Finished!</h2>\r\n        <p>Your score: {score.toFixed(2)}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentIndex];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Quiz Mode</h1>\r\n      <p>Time left: {timeLeft} seconds</p>\r\n      <h3>\r\n        Question {currentIndex + 1} of {questions.length}\r\n      </h3>\r\n      <p>{currentQuestion.text}</p>\r\n      {currentQuestion.type === 'essay' ? (\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          onChange={(e) => setAnswers({ ...answers, [currentIndex]: e.target.value })}\r\n        />\r\n      ) : (\r\n        <div>\r\n          {currentQuestion.choices.map((choice, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type={currentQuestion.type === 'single' ? 'radio' : 'checkbox'}\r\n                name=\"answer\"\r\n                value={index}\r\n                checked={\r\n                  currentQuestion.type === 'single'\r\n                    ? answers[currentIndex] === index\r\n                    : answers[currentIndex]?.includes(index)\r\n                }\r\n                onChange={() => handleAnswerChange(index)}\r\n              />\r\n              {choice}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <button onClick={handleNext}>Next</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}