{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semester4\\\\AI\\\\TUGAS Opsional\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds per question\n  const [score, setScore] = useState(0);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0 && !quizFinished) {\n      startTimer();\n    }\n    return () => clearInterval(timerRef.current);\n  }, [currentIndex, questions, quizFinished]);\n  const fetchQuestions = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/questions/random?limit=10');\n      setQuestions(res.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const startTimer = () => {\n    setTimeLeft(30);\n    clearInterval(timerRef.current);\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          handleNext();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleAnswerChange = choiceIndex => {\n    setAnswers({\n      ...answers,\n      [currentIndex]: choiceIndex\n    });\n  };\n  const handleSubmitAnswer = () => {\n    const currentQuestion = questions[currentIndex];\n    const userAnswer = answers[currentIndex];\n    let questionScore = 0;\n    if (currentQuestion.type === 'single_choice') {\n      if (currentQuestion.choices.some((choice, idx) => idx === userAnswer && choice.is_correct)) {\n        questionScore = currentQuestion.score_weight * (timeLeft / 30);\n      }\n    } else if (currentQuestion.type === 'multiple_choice') {\n      const correctIndexes = currentQuestion.choices.map((choice, idx) => choice.is_correct ? idx : null).filter(idx => idx !== null);\n      const userAnswers = Array.isArray(userAnswer) ? userAnswer : [userAnswer];\n      const correctSet = new Set(correctIndexes);\n      const userSet = new Set(userAnswers);\n      if (userSet.size === correctSet.size && [...userSet].every(ans => correctSet.has(ans))) {\n        questionScore = currentQuestion.score_weight * (timeLeft / 30);\n      }\n    } else if (currentQuestion.type === 'essay') {\n      // For essay, scoring can be manual or default 0 here\n      questionScore = 0;\n    }\n    setScore(prev => prev + questionScore);\n  };\n  const handleNext = () => {\n    handleSubmitAnswer();\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setQuizFinished(true);\n    }\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  if (quizFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container quiz-finished\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time left: \", timeLeft, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number\",\n      children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), currentQuestion.type === 'essay' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"answer-textarea\",\n      rows: \"4\",\n      cols: \"50\",\n      onChange: e => setAnswers({\n        ...answers,\n        [currentIndex]: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices\",\n      children: currentQuestion.choices.map((choice, index) => {\n        var _answers$currentIndex;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"choice\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: currentQuestion.type === 'single_choice' ? 'radio' : 'checkbox',\n            name: \"answer\",\n            value: index,\n            checked: currentQuestion.type === 'single_choice' ? answers[currentIndex] === index : (_answers$currentIndex = answers[currentIndex]) === null || _answers$currentIndex === void 0 ? void 0 : _answers$currentIndex.includes(index),\n            onChange: () => handleAnswerChange(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), choice.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"nve4xyXtKfdWRqXxLPpnXuDX0Ds=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentIndex","setCurrentIndex","answers","setAnswers","timeLeft","setTimeLeft","score","setScore","quizFinished","setQuizFinished","timerRef","fetchQuestions","length","startTimer","clearInterval","current","res","get","data","error","console","setInterval","prev","handleNext","handleAnswerChange","choiceIndex","handleSubmitAnswer","currentQuestion","userAnswer","questionScore","type","choices","some","choice","idx","is_correct","score_weight","correctIndexes","map","filter","userAnswers","Array","isArray","correctSet","Set","userSet","size","every","ans","has","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","text","rows","cols","onChange","e","target","value","index","_answers$currentIndex","name","checked","includes","onClick","_c","$RefreshReg$"],"sources":["D:/Semester4/AI/TUGAS Opsional/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Quiz.css';\r\n\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds per question\r\n  const [score, setScore] = useState(0);\r\n  const [quizFinished, setQuizFinished] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (questions.length > 0 && !quizFinished) {\r\n      startTimer();\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [currentIndex, questions, quizFinished]);\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/questions/random?limit=10');\r\n      setQuestions(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n    }\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setTimeLeft(30);\r\n    clearInterval(timerRef.current);\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          handleNext();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleAnswerChange = (choiceIndex) => {\r\n    setAnswers({ ...answers, [currentIndex]: choiceIndex });\r\n  };\r\n\r\n  const handleSubmitAnswer = () => {\r\n    const currentQuestion = questions[currentIndex];\r\n    const userAnswer = answers[currentIndex];\r\n    let questionScore = 0;\r\n\r\n    if (currentQuestion.type === 'single_choice') {\r\n      if (currentQuestion.choices.some((choice, idx) => idx === userAnswer && choice.is_correct)) {\r\n        questionScore = currentQuestion.score_weight * (timeLeft / 30);\r\n      }\r\n    } else if (currentQuestion.type === 'multiple_choice') {\r\n      const correctIndexes = currentQuestion.choices\r\n        .map((choice, idx) => (choice.is_correct ? idx : null))\r\n        .filter((idx) => idx !== null);\r\n      const userAnswers = Array.isArray(userAnswer) ? userAnswer : [userAnswer];\r\n      const correctSet = new Set(correctIndexes);\r\n      const userSet = new Set(userAnswers);\r\n      if (\r\n        userSet.size === correctSet.size &&\r\n        [...userSet].every((ans) => correctSet.has(ans))\r\n      ) {\r\n        questionScore = currentQuestion.score_weight * (timeLeft / 30);\r\n      }\r\n    } else if (currentQuestion.type === 'essay') {\r\n      // For essay, scoring can be manual or default 0 here\r\n      questionScore = 0;\r\n    }\r\n\r\n    setScore((prev) => prev + questionScore);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    handleSubmitAnswer();\r\n    if (currentIndex + 1 < questions.length) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    } else {\r\n      setQuizFinished(true);\r\n    }\r\n  };\r\n\r\n  if (questions.length === 0) {\r\n    return <div className=\"quiz-container\">Loading questions...</div>;\r\n  }\r\n\r\n  if (quizFinished) {\r\n    return (\r\n      <div className=\"quiz-container quiz-finished\">\r\n        <h2>Quiz Finished!</h2>\r\n        <p>Your score: {score.toFixed(2)}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentIndex];\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-header\">\r\n        <h1>Quiz Mode</h1>\r\n        <div className=\"timer\">Time left: {timeLeft} seconds</div>\r\n      </div>\r\n      <div className=\"question-number\">\r\n        Question {currentIndex + 1} of {questions.length}\r\n      </div>\r\n      <div className=\"question-text\">{currentQuestion.text}</div>\r\n      {currentQuestion.type === 'essay' ? (\r\n        <textarea\r\n          className=\"answer-textarea\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          onChange={(e) => setAnswers({ ...answers, [currentIndex]: e.target.value })}\r\n        />\r\n      ) : (\r\n        <div className=\"choices\">\r\n          {currentQuestion.choices.map((choice, index) => (\r\n            <label className=\"choice\" key={index}>\r\n              <input\r\n                type={currentQuestion.type === 'single_choice' ? 'radio' : 'checkbox'}\r\n                name=\"answer\"\r\n                value={index}\r\n                checked={\r\n                  currentQuestion.type === 'single_choice'\r\n                    ? answers[currentIndex] === index\r\n                    : answers[currentIndex]?.includes(index)\r\n                }\r\n                onChange={() => handleAnswerChange(index)}\r\n              />\r\n              {choice.text}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <button className=\"next-button\" onClick={handleNext}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}